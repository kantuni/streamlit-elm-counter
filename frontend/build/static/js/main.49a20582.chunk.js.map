{"version":3,"sources":["index.ts"],"names":["app","window","Elm","Main","init","node","document","getElementById","ports","fromElm","subscribe","count","Streamlit","setComponentValue","initialValueSent","events","addEventListener","RENDER_EVENT","event","args","detail","fromJS","send","initial","setComponentReady","setFrameHeight"],"mappings":"sKAAA,kBASMA,EAAMC,OAAOC,IAAIC,KAAKC,KAAK,CAC/BC,KAAMC,SAASC,eAAe,UAIhCP,EAAIQ,MAAMC,QAAQC,WAAU,SAACC,GAC3BC,IAAUC,kBAAkBF,MAK9B,IAAIG,GAAmB,EAqBvBF,IAAUG,OAAOC,iBAAiBJ,IAAUK,cAd5C,SAAkBC,GAAoB,IAE5BC,EAAUD,EAAkCE,OAA5CD,KAIHL,IACHd,EAAIQ,MAAMa,OAAOC,KAAKH,EAAKI,SAC3BX,IAAUC,kBAAkBM,EAAKI,SACjCT,GAAmB,MASvBF,IAAUY,oBAIVZ,IAAUa,mB","file":"static/js/main.49a20582.chunk.js","sourcesContent":["import { RenderData, Streamlit } from \"streamlit-component-lib\"\n\ndeclare global {\n  interface Window {\n    Elm: any\n  }\n}\n\n// Initialize the Elm app.\nconst app = window.Elm.Main.init({\n  node: document.getElementById(\"root\"),\n})\n\n// Subscribe to messages from the Elm app.\napp.ports.fromElm.subscribe((count: number) => {\n  Streamlit.setComponentValue(count)\n})\n\n// Only sent the initial value if this variable is false.\n// Otherwise, the counter will always be reset to the initial value.\nlet initialValueSent = false\n\n/**\n * The component's render function. This will be called immediately after\n * the component is initially loaded, and then again every time the\n * component gets new data from Python.\n */\nfunction onRender(event: Event): void {\n  // Get the RenderData args from the event.\n  const { args } = (event as CustomEvent<RenderData>).detail\n\n  // Send the initial value to the Elm app,\n  // and set the component initial value.\n  if (!initialValueSent) {\n    app.ports.fromJS.send(args.initial)\n    Streamlit.setComponentValue(args.initial)\n    initialValueSent = true\n  }\n}\n\n// Attach our `onRender` handler to Streamlit's render event.\nStreamlit.events.addEventListener(Streamlit.RENDER_EVENT, onRender)\n\n// Tell Streamlit we're ready to start receiving data. We won't get our\n// first RENDER_EVENT until we call this function.\nStreamlit.setComponentReady()\n\n// Finally, tell Streamlit to update our initial height. We omit the\n// `height` parameter here to have it default to our scrollHeight.\nStreamlit.setFrameHeight()\n"],"sourceRoot":""}